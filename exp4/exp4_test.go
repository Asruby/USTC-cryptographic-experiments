package exp4

import (
	"fmt"
	"github.com/stretchr/testify/assert"
	"math/big"
	"testing"
)

func TestTask1(t *testing.T){
	N:="179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581"
	p,q:=task1(N)
	fmt.Printf("p is %s\nq is %s\n",p,q)
	bigp,_:=new(big.Int).SetString(p,10)
	bigq,_:=new(big.Int).SetString(q,10)
	assert.Equal(t,new(big.Int).Mul(bigp,bigq).String(),N)
}
func TestTask2(t *testing.T){
	N:="648455842808071669662824265346772278726343720706976263060439070378797308618081116462714015276061417569195587321840254520655424906719892428844841839353281972988531310511738648965962582821502504990264452100885281673303711142296421027840289307657458645233683357077834689715838646088239640236866252211790085787877"
	p,q:=task2(N)
	fmt.Printf("p is %s\nq is %s\n",p,q)
	bigp,_:=new(big.Int).SetString(p,10)
	bigq,_:=new(big.Int).SetString(q,10)
	assert.Equal(t,new(big.Int).Mul(bigp,bigq).String(),N)
}
